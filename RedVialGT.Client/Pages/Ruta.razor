@page "/ruta"
@page "/ruta/{idRutaEditar:int}"

@using RedVialGT.Shared;
@using RedVialGT.Client.Services;

@inject IRutaService rutaService;
@inject IDepartamentoService departamentoService;
@inject NavigationManager navegacion;

<PageTitle>@tituo</PageTitle>

<h3>@tituo</h3>

<EditForm Model="ruta" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="mb-3">
        <label class="form-label">Nombre Ruta</label>
        <InputText class="form-control" @bind-Value="ruta.NombreRuta"></InputText>
        <ValidationMessage For="@(()=> ruta.NombreRuta)"></ValidationMessage>
    </div>
    <div class="mb-3">
        <label class="form-label">Departamento Partida</label>
        <InputSelect class="form-select" @bind-Value="ruta.IdDepartamentoPartida">
            <option value="0"> -- Seleccionar --</option>
            @foreach (var item in listaDepartamento)
            {
                <option value="@item.IdDepartamento">@item.NombreDepartamento</option>
            }
        </InputSelect>
        <ValidationMessage For="@(()=> ruta.IdDepartamentoPartida)"></ValidationMessage>
    </div>
    <div class="mb-3">
        <label class="form-label">Departamento Destino</label>
        <InputSelect class="form-select" @bind-Value="ruta.IdDepartamentoDestino">
            <option value="0"> -- Seleccionar --</option>
            @foreach (var item in listaDepartamento)
            {
                <option value="@item.IdDepartamento">@item.NombreDepartamento</option>
            }
        </InputSelect>
        <ValidationMessage For="@(()=> ruta.IdDepartamentoDestino)"></ValidationMessage>
    </div>
    <div class="mb-3">
        <label class="form-label">Distancia en km</label>
        <InputNumber class="form-control" @bind-Value="ruta.DistanciaDepartamentos"></InputNumber>
        <ValidationMessage For="@(()=> ruta.DistanciaDepartamentos)"></ValidationMessage>
    </div>
    <button class="btn btn-primary" type="submit">
        @btnTexto
    </button>
    <a class="btn btn-warning" href="rutas">
        Volver
    </a>
</EditForm>

@code {
    [Parameter]
    public int idRutaEditar { get; set; } = 0;

    string tituo = string.Empty;
    string btnTexto = string.Empty;

    RutaDTO ruta = new RutaDTO();
    List<DepartamentoDTO> listaDepartamento = new List<DepartamentoDTO>();

    protected override async Task OnInitializedAsync()
    {
        if (idRutaEditar != 0)
        {
            ruta = await rutaService.Buscar(idRutaEditar);
            btnTexto = "Actualizar Ruta";
            tituo = "Editar Ruta";
        }
        else
        {
            btnTexto = "Guardar Ruta";
            tituo = "Nueva Ruta";
        }
        listaDepartamento = await departamentoService.ListaDepartamento();
    }

    private async Task OnValidSubmit()
    {
        int idDevuelto = 0;

        if (idRutaEditar == 0)

            idDevuelto = await rutaService.Guardar(ruta);
        else
            idDevuelto = await rutaService.Editar(ruta);

        if (idDevuelto != 0)
            navegacion.NavigateTo("/rutas");
    }
}
